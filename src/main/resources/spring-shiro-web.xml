<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd" default-lazy-init="true">

	<!-- 注解支持 -->
	<context:annotation-config />
	<context:property-placeholder location="classpath*:/shiro-cas.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />



<!-- 	<jee:local-slsb id="PermissionManager" jndi-name="com.yuxh.mysky.service.ShiroBean" business-interface="com.yuxh.mysky.service.ShiroBean"></jee:local-slsb> -->

	<!-- <jee:jndi-lookup id="PermissionManager" -->

	<!-- jndi-name="ejb:itoo-authority-shiro-ear/itoo-authority-shiro-core-0.0.1-SNAPSHOT/PermissionManager!com.tgb.itoo.authority.service.ShiroBean" -->

	<!-- lookup-on-startup="true" cache="true" environment-ref="evn"> -->

	<!-- </jee:jndi-lookup> -->
	<!-- shiro过滤器 start -->
	<bean id="shiroSecurityFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="${loginUrl}"></property>
		<property name="successUrl" value="${successUrl}"></property>
		<property name="filters">
			<map>
				<entry key="casFilter">
					<bean class="org.apache.shiro.cas.CasFilter">
						<!--配置验证错误时的失败页面 /main 为系统登录页面 -->
						<property name="failureUrl" value="/message.jsp" />
					</bean>
				</entry>
			</map>
		</property>
		<!-- 过滤器链，请求url对应的过滤器 -->
		<property name="filterChainDefinitions">
			<value>
				/message.jsp=anon
				/logout=logout
				/shiro-cas=casFilter
				/** =user
			</value>
		</property>
	</bean>
	<!-- shiro过滤器 end -->

	<!-- 保证实现shiro内部的生命周期函数bean的执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 第三：shiro管理中心类 start-李社河 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroRealm"></property>
		<property name="sessionMode" value="http"></property>
		<property name="subjectFactory" ref="casSubjectFactory"></property>
		<!-- ehcahe缓存shiro自带 -->
		<!-- <property name="cacheManager" ref="shiroEhcacheManager"></property> -->

		<!-- redis缓存 -->
		<property name="cacheManager" ref="redisCacheManager" />

		<!-- sessionManager -->
		<property name="sessionManager" ref="sessionManager"></property>
	</bean>


	<!-- 缓存管理器redis-start-李社河-2015年4月14日 -->

	<!-- sessionManager -->
	<!-- <bean id="sessionManager" -->
	<!-- class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager"> -->
	<!-- <property name="sessionDAO" ref="redisSessionDAO" /> -->
	<!-- </bean> -->

	<!-- 自定义redisManager-redis -->
	<bean id="redisCacheManager" class="com.yuxh.mysky.realm.RedisCacheManager">
		<property name="redisManager" ref="redisManager" />
	</bean>
	<!-- 自定义cacheManager -->
	<bean id="redisCache" class="com.yuxh.mysky.realm.RedisCache">
		<constructor-arg ref="redisManager"></constructor-arg>
	</bean>

	<bean id="redisManager" class="org.crazycake.shiro.RedisManager"></bean>

	<!-- 缓存管理器redis-end-李社河-2015年4月14日 -->



	<!-- session会话存储的实现类 -->
	<bean id="redisShiroSessionDAO" class="com.yuxh.mysky.dao.RedisSessionDAO">
		<property name="redisManager" ref="redisManager" />
	</bean>



	<!-- sessionManager -->
	<!-- session管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 设置全局会话超时时间，默认30分钟(1800000) -->
		<property name="globalSessionTimeout" value="1800000" />
		<!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
		<property name="deleteInvalidSessions" value="true" />

		<!-- 会话验证器调度时间 -->
		<property name="sessionValidationInterval" value="1800000" />

		<!-- session存储的实现 -->
		<property name="sessionDAO" ref="redisShiroSessionDAO" />
		<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
		<property name="sessionIdCookie" ref="sharesession" />
		<!-- 定时检查失效的session -->
		<property name="sessionValidationSchedulerEnabled" value="true" />

	</bean>


	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
	<bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- cookie的name,对应的默认是 JSESSIONID -->
		<constructor-arg name="name" value="SHAREJSESSIONID" />
		<!-- jsessionId的path为 / 用于多个系统共享jsessionId -->
		<property name="path" value="/" />
		<property name="httpOnly" value="true" />
	</bean>







	<!-- 第一：shiro于数据交互的类 ，自己写的类的实现-ShiroRealmBean自己重写的类的实现 -->
	<bean id="shiroRealm" class="com.yuxh.mysky.realm.ShiroRealm">
<!-- 		<property name="defaultRoles" value="user"></property> -->

		<!-- 注入自己实现的类，授权的过程-PermissionManager是云平台重写的授权的过程，用户Id->角色->资源->查找权限-李社河2015年4月15日 -->
<!-- 		<property name="permissionMgr" ref="PermissionManager"></property> -->
<!-- 		<property name="casServerUrlPrefix" value="${casServerUrlPrefix}"></property> -->
<!-- 		<property name="casService" value="${casService}"></property> -->
	</bean>

	<bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory" />

	<!-- shiro的自带缓存管理器encahe -->
	<!-- <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> -->
	<!-- <property name="cacheManagerConfigFile" value="classpath:config/ehcache-shiro.xml" /> -->
	<!-- </bean> -->

	<!-- 开启shiro的注解，需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"></bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>
